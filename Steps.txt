1. Initialize variables and classes (Host class, command line arguments)
2. Main loop (while we still have Frames to send):
  a) Create new "Frame" (Class with variables Length, source host, destination host, transsmission time, type) 
  and add it to source host's Frame queue
  b) Two scenarios:
    1. If channel is idle (Represented by global Frame queue being empty)
      a) Time transmit Frame to destination host is current time + DIFS
    2. If channel is not idle (Represented by global Frame queue not empty)
      a) Create backoff number for source host - if host already has number, decrement
      b) If backoff number count 0, we go to step c, else skip to step e
  c) Add "Frame" to global Wi-Fi channel "Frame queue" (like how we did it for project 1)
  d) Send Frame to source host's Frame queue with time = current + transmission time
  e) Loop through all hosts to check if they need to send an ACK frame for recieved frame
  f) Update statistics
 

MODIFIED MAIN LOOP
  1. Create one Frame for each host w/ random times
  2. Go through each Frame, from earliest to latest - set time to Frame's creation time
    a) If channel idle
      1. Time to transmit = DIFS + time needed to transfer length
      2. Transmit to destination host - bypasses queue
    b) If channel busy
      1. Add backoff number to source host
      2. Add frame to host's frame queue
  3. At end of each Frame, check if any host received a packet
    a) Send acknowledgement frame
    b) Reset "receivedFrame" variable of host to NULL
  4. Before working on next Frame, check the following:
    a) Is the next Frame's time after channel's projected next idle time?
      1. Then decrement all hosts with backoff numbers based on projected idle time
          in order, from smallest backoff number to largest
      2. Transmit Frame of the host with the smallest backoff number - pop it from queue
    b) Is it before the channel's projected next idle time?
      1. Do nothing